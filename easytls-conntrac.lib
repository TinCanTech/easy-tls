#!/bin/sh

# Experimental - Use at your own risk

# Copyright - negotiable
copyright ()
{
: << VERBATUM_COPYRIGHT_HEADER_INCLUDE_NEGOTIABLE
# easytls-conntrac.lib -- Do simple magic
#
# Copyright (C) 2020 Richard Bonhomme (Friday 13th of March 2020)
# https://github.com/TinCanTech/easy-tls
# tincantech@protonmail.com
# All Rights reserved.
#
# This code is released under version 2 of the GNU GPL
# See LICENSE of this project for full licensing details.
#
# Connection tracking.
#
VERBATUM_COPYRIGHT_HEADER_INCLUDE_NEGOTIABLE
}

# Simple lock file
acquire_lock ()
{
	exec 2>/dev/null
	set -o noclobber
	exec 8> "${easytls_ct_lock_file}" || return 1
	printf "%s" "$$" >&8 || return 1
	exec 8< "${easytls_ct_lock_file}" || return 1
	set +o noclobber
	[ ! $VERBOSE_CONN_TRAC ] || update_status "conntrac: acquire_lock"
}

release_lock ()
{
	exec 8<&- || return 1
	exec 8>&- || return 1
	"${EASYTLS_RM}" -f "${easytls_ct_lock_file}"
	[ ! $VERBOSE_CONN_TRAC ] || update_status "conntrac: release_lock"
}

# Connection tacking - Connect
conn_trac_connect ()
{
	[ -n "${1}" ] || return 1
	[ -n "${2}" ] || return 1
	easytls_ct_lock_file="${2}.lock"
	easytls_temp_file="${2}.tmp"
	easytls_ct_log="${2}.log"
	unset err_exit match_found ct_ig_ipp_ex

	acquire_lock || die "ct acquire_lock"

	if [ $ENABLE_CONN_TRAC_STATS ]
	then
		conn_trac_stats || {
			update_status "conntrac: stats fail"
			release_lock || : # die "ct release_lock"
			die "conntrac: stats fail"
			}
	fi

	# Pattern to match - Anything after ++ cannot be used
	ct_pattern="${1%++*}"
	[ $VERBOSE_CONN_TRAC ] && \
		update_status "conntrac: pattern ${ct_pattern}"

	if [ -f "${2}" ]
	then
		{
			while read full_conn
			do
				conn="${full_conn%++*}"
				if [ "${conn}" = "${ct_pattern}" ]
				then
					"${EASYTLS_PRINTF}" '%s\n' "${full_conn}"
					[ $match_found ] || \
						update_status "conntrac: already registered"
					[ $ip_pool_exhausted ] && \
						ct_ig_ipp_ex="${ct_ig_ipp_ex} X"
					match_found=1
				else
					# Print the existing record
					"${EASYTLS_PRINTF}" '%s\n' "${full_conn}"
				fi
			done < "${2}"
			# Always register the record
			"${EASYTLS_PRINTF}" "%s\n" "${1}"
			# Add Ignore stats
			[ -z "${ct_ig_ipp_ex}" ] || \
				update_status "IGN-IPP-EX:${ct_ig_ipp_ex}"
		} > "${easytls_temp_file}" || err_exit=1

		"${EASYTLS_MV}" -f "${easytls_temp_file}" "${2}" || err_exit=1

		if [ $match_found ]
		then
			err_exit=${err_exit:-2}
		else
			update_status "conntrac: registered"
		fi
	else
		# conntrac file does not exist, create it now
		{
			"${EASYTLS_PRINTF}" "%s\n" "${1}"
		} > "${2}" || err_exit=1
		update_status "conntrac: registered"
	fi
	release_lock || die "ct release_lock"

	unset easytls_ct_lock_file easytls_temp_file conn \
			match_found ct_ig_ipp_ex
	err_exit=${err_exit:-0}
	return ${err_exit}
} # => conn_trac_connect ()

# Update connection tacking - disconnect
conn_trac_disconnect ()
{
	[ -n "${1}" ] || return 1
	[ -n "${2}" ] || return 1
	easytls_ct_lock_file="${2}.lock"
	easytls_temp_file="${2}.tmp"
	easytls_ct_log="${2}.log"
	unset err_exit match_found ct_ig_ipp_ex

	acquire_lock || die "ct acquire_lock"

	if [ $ENABLE_CONN_TRAC_STATS ]
	then
		conn_trac_stats || {
			update_status "conntrac: stats fail"
			release_lock || : # die "ct release_lock"
			die "conntrac: stats fail"
			}
	fi

	# Pattern to match - Anything after ++ cannot be used
	ct_pattern="${1%++*}"
	[ $VERBOSE_CONN_TRAC ] && \
		update_status "conntrac pattern: ${ct_pattern}"

	if [ -f "${2}" ]
	then
		{
			while read full_conn
			do
				conn="${full_conn%++*}"
				if [ "${conn}" = "${ct_pattern}" ]
				then
					# If match_found then a record has been deleted
					# Print the remaining duplicates
					[ $match_found ] && \
						"${EASYTLS_PRINTF}" '%s\n' "${full_conn}"
					[ $match_found ] && [ $ip_pool_exhausted ] && \
						ct_ig_ipp_ex="${ct_ig_ipp_ex} X"
					# Matched - Do not Print
					[ $match_found ] || \
						update_status "conntrac: unregistered"
					match_found=1
				else
					# No match - Print current record
					"${EASYTLS_PRINTF}" '%s\n' "${full_conn}"
				fi
			done < "${2}"
			# Add Ignore stats
			[ -z "${ct_ig_ipp_ex}" ] || \
				update_status "IGN-IPP-EX:${ct_ig_ipp_ex}"
		} > "${easytls_temp_file}" || err_exit=1

		"${EASYTLS_MV}" -f "${easytls_temp_file}" "${2}" || err_exit=1

		[ $match_found ] || {
			update_status "conntrac: record not found"
			err_exit=${err_exit:-2}
			}
		[ -s "${2}" ] || {
			"${EASYTLS_RM}" -f "${2}"
			update_status "conntrac: RESET"
			}
	else
		update_status "conntrac: file not found"
		err_exit=3
	fi
	release_lock || die "ct release_lock"

	unset easytls_ct_lock_file easytls_temp_file conn \
			match_found ct_ig_ipp_ex
	err_exit=${err_exit:-0}
	return ${err_exit}
} # => conn_trac_disconnect ()

conn_trac_stats ()
{
	ctc=0
	[ -f "${easytls_ct_log}" ] && ctc="$("${EASYTLS_CAT}" "${easytls_ct_log}")"
	[ $(( ctc )) -lt 32768 ] || ctc=0
	ctc=$(( ctc + 1 ))
	"${EASYTLS_PRINTF}" '%s\n' "${ctc}" > "${easytls_temp_file}" || exit 1
	"${EASYTLS_MV}" -f "${easytls_temp_file}" "${easytls_ct_log}" || exit 1
	update_status "conntrac: tallied"
}
